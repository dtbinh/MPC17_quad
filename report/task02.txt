Q = diag([0.5,10,10,0.5,0.5,0.5,0.5])
R = 0.1*eye(n_inputs)

Q was chosen diagonal for simplicity. The parameters in Q were chosen such that the system output fulfills the specified requirements on zâ€™ and alpha, beta. The cost on the states x2 and x3 was chosen more expensive in order to ensure that they are controlled to zero quickly.

R was chosen diagonal as well, with relatively cheap input since there were no restrictions on power consumption or strain on the motors.

The terminal set and terminal cost were chosen corresponding to a LQR controlled system, due to stability guarantees and the relatively simple implementation. 

P was thus chosen as the solution of the DARE and the terminal set as the maximum positive invariant set of the autonomous system x(k+1) = (A-BK)x(k).

A_x and b_x form the constraints of the polyhedral terminal set A_x * x <= b_x:

A_x = 
 0   -1.1716         0         0   -0.1124         0         0
         0         0   -1.1716         0         0   -0.1124         0
         0    1.1716         0         0    0.1124         0         0
         0         0    1.1716         0         0    0.1124         0
         0   -1.2245         0         0   -0.0219         0         0
         0         0   -1.2245         0         0   -0.0219         0
         0    1.2245         0         0    0.0219         0         0
         0         0    1.2245         0         0    0.0219         0
         0   -1.1858         0         0    0.1201         0         0
         0         0   -1.1858         0         0    0.1201         0
         0    1.1858         0         0   -0.1201         0         0
         0         0    1.1858         0         0   -0.1201         0
         0         0         0    0.9516         0         0    0.1346
         0   -1.0093         0         0    0.3275         0         0
         0         0   -1.0093         0         0    0.3275         0
         0         0         0   -0.9516         0         0   -0.1346
         0    1.0093         0         0   -0.3275         0         0
         0         0    1.0093         0         0   -0.3275         0
         0         0         0    0.9867         0         0    0.0824
         0   -0.6373         0         0    0.6156         0         0
         0         0   -0.6373         0         0    0.6156         0
         0         0         0   -0.9867         0         0   -0.0824
         0    0.6373         0         0   -0.6156         0         0
         0         0    0.6373         0         0   -0.6156         0
    1.0000         0         0         0         0         0         0
         0         0         0    1.0000         0         0         0
         0         0         0         0    1.0000         0         0
         0         0         0         0         0    1.0000         0
         0         0         0         0         0         0    1.0000
   -1.0000         0         0         0         0         0         0
         0         0         0   -1.0000         0         0         0
         0         0         0         0   -1.0000         0         0
         0         0         0         0         0   -1.0000         0
         0         0         0         0         0         0   -1.0000

b_x = 
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000
       10000